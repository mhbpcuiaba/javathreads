


cu=ourse -> the complete and parallel programming course

57- summary has a challange???!?!?!?!?

Day 1


    - Self-Study

        * Checkout William Pugh's "Java Memory model" website.
        * Acquaint yourself with the JSR 133 (java memory model) FAQ.
        * What guarantees does the java memory model make regarding initialization safety?
        Is it always necessary to use locks to safely publish objects between threads?
        * What is the double-checked locking anti-pattern?

    - Do

        * Experiment with the original, broken "dinning philosophers" example. Try
          modifying the length of time that philosophers think and eat and the number of philosophers.
          What efect does this have on how long it takes until deadlock?
          Imagine that you were trying to debug this and wanted to increase the likelihood of reproducing the deadlock
          - what would you do?

        * (HARD) Create a program that demonstrates writes to memory appearing to be reordered in the absence of
        synchronization. This is difficult because although the java memory model allows things to be reordered,
        most simple examples won't be optimized to the point of actually demonstrating the problem.